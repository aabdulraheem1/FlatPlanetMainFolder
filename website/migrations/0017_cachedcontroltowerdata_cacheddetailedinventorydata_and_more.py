# Generated by Django 5.0.14 on 2025-07-23 07:51

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0016_scenariooptimizationstate'),
    ]

    operations = [
        migrations.CreateModel(
            name='CachedControlTowerData',
            fields=[
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='website.scenarios')),
                ('combined_demand_plan', models.JSONField()),
                ('poured_data', models.JSONField()),
                ('pour_plan', models.JSONField()),
                ('calculation_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CachedDetailedInventoryData',
            fields=[
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='website.scenarios')),
                ('inventory_data', models.JSONField(default=list)),
                ('production_data', models.JSONField(default=list)),
                ('calculation_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CachedInventoryData',
            fields=[
                ('version', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='website.scenarios')),
                ('inventory_months', models.JSONField()),
                ('inventory_cogs', models.JSONField()),
                ('inventory_revenue', models.JSONField()),
                ('production_aud', models.JSONField()),
                ('production_cogs_group_chart', models.JSONField()),
                ('top_products_by_group_month', models.JSONField()),
                ('parent_product_groups', models.JSONField()),
                ('cogs_data_by_group', models.JSONField()),
                ('calculation_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CachedForecastData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(max_length=50)),
                ('chart_data', models.JSONField()),
                ('calculation_date', models.DateTimeField(auto_now=True)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.scenarios')),
            ],
            options={
                'unique_together': {('version', 'data_type')},
            },
        ),
        migrations.CreateModel(
            name='CachedFoundryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foundry_site', models.CharField(max_length=10)),
                ('chart_data', models.JSONField()),
                ('top_products', models.JSONField()),
                ('monthly_pour_plan', models.JSONField()),
                ('calculation_date', models.DateTimeField(auto_now=True)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.scenarios')),
            ],
            options={
                'unique_together': {('version', 'foundry_site')},
            },
        ),
        migrations.CreateModel(
            name='CachedSupplierData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_code', models.CharField(max_length=20)),
                ('chart_data', models.JSONField()),
                ('top_products', models.JSONField()),
                ('calculation_date', models.DateTimeField(auto_now=True)),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.scenarios')),
            ],
            options={
                'unique_together': {('version', 'supplier_code')},
            },
        ),
    ]
