# Generated by Django 5.0.14 on 2025-08-06 07:46

from django.db import migrations


def clean_inventory_projection_duplicates(apps, schema_editor):
    """
    Remove duplicate records from InventoryProjectionModel before applying unique constraint.
    Keep the most recently updated record for each (version, month, parent_product_group) combination.
    """
    InventoryProjectionModel = apps.get_model('website', 'InventoryProjectionModel')
    
    # Raw SQL to identify and delete duplicates, keeping the latest record
    with schema_editor.connection.cursor() as cursor:
        # Delete duplicates keeping the record with the highest ID (most recent)
        cursor.execute("""
            WITH DuplicateRecords AS (
                SELECT 
                    id,
                    ROW_NUMBER() OVER (
                        PARTITION BY version_id, month, parent_product_group 
                        ORDER BY updated_at DESC, id DESC
                    ) as rn
                FROM website_inventoryprojectionmodel
            )
            DELETE FROM website_inventoryprojectionmodel 
            WHERE id IN (
                SELECT id FROM DuplicateRecords WHERE rn > 1
            )
        """)
        
        print(f"Cleaned {cursor.rowcount} duplicate inventory projection records")


def reverse_clean_inventory_projection_duplicates(apps, schema_editor):
    """
    This migration is irreversible as we cannot restore deleted duplicate data
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0030_inventoryprojectionmodel'),
    ]

    operations = [
        migrations.RunPython(
            clean_inventory_projection_duplicates,
            reverse_clean_inventory_projection_duplicates,
        ),
    ]
