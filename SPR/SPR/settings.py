"""
Django settings for SPR project.

Generated by 'django-admin startproject' using Django 5.1.5.

üéØ CRITICAL: This project uses a dual-directory structure:
   - Django server runs from: spr/
   - Templates located at: ../templates/ (parent directory)
   - This settings file: spr/SPR/settings.py

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# TEMPLATE DIRECTORY CONFIGURATION FOR DUAL-PROJECT STRUCTURE
# Server runs from spr/SPR/ so BASE_DIR = spr/
# Templates are located at: C:\Users\aali\OneDrive - bradken.com\Data\Training\SPR\templates\
# We need to go up two levels: spr/ -> SPR/ -> parent -> templates/
TEMPLATES_DIR = BASE_DIR.parent / 'templates'

# Verify templates directory exists at startup
if TEMPLATES_DIR.exists():
    print(f"‚úÖ Templates found: {TEMPLATES_DIR}")
    sample_template = TEMPLATES_DIR / 'website' / 'list_scenarios.html'
    print(f"‚úÖ list_scenarios.html exists: {sample_template.exists()}")
else:
    print(f"‚ùå Templates NOT found: {TEMPLATES_DIR}")
    print(f"   BASE_DIR: {BASE_DIR}")
    print(f"   Looking for templates at: {TEMPLATES_DIR}")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--jqdx=qmc(va6-wy7-sznymh6vu+%p36)l76y*_u86m0+36ck&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'website',
    'users',
    'widget_tweaks',
    'django.contrib.humanize',
    

    
   
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'SPR.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],  # Use the correctly configured templates directory
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'SPR.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'SPR',           # Replace with your database name
        'USER': '',           # Replace with your SQL Server username
        'PASSWORD': '',   # Replace with your SQL Server password
        'HOST': 'localhost',              # Or your SQL Server host
        'PORT': '',                       # Default is 1433, leave blank unless using a different port
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server',  # Or 'ODBC Driver 18 for SQL Server' if installed
            'trusted_connection': 'yes',   
        },
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
MEDIA_URL =  '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media' )
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DATA_UPLOAD_MAX_NUMBER_FIELDS = 5000  # or higher if needed

# Authentication settings
LOGIN_URL = '/login/'

